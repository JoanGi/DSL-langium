"use strict";
/******************************************************************************
 * This file was generated by langium-cli 0.2.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.reflection = exports.SecondAstReflection = exports.isRequeriment = exports.Requeriment = exports.isDatasetDefinition = exports.DatasetDefinition = exports.isAuthor = exports.Author = exports.isModel = exports.Model = exports.isInstance = exports.Instance = exports.isDeclaration = exports.Declaration = exports.isAttribute = exports.Attribute = void 0;
/* eslint-disable @typescript-eslint/array-type */
/* eslint-disable @typescript-eslint/no-empty-interface */
const langium_1 = require("langium");
exports.Attribute = 'Attribute';
function isAttribute(item) {
    return exports.reflection.isInstance(item, exports.Attribute);
}
exports.isAttribute = isAttribute;
exports.Declaration = 'Declaration';
function isDeclaration(item) {
    return exports.reflection.isInstance(item, exports.Declaration);
}
exports.isDeclaration = isDeclaration;
exports.Instance = 'Instance';
function isInstance(item) {
    return exports.reflection.isInstance(item, exports.Instance);
}
exports.isInstance = isInstance;
exports.Model = 'Model';
function isModel(item) {
    return exports.reflection.isInstance(item, exports.Model);
}
exports.isModel = isModel;
exports.Author = 'Author';
function isAuthor(item) {
    return exports.reflection.isInstance(item, exports.Author);
}
exports.isAuthor = isAuthor;
exports.DatasetDefinition = 'DatasetDefinition';
function isDatasetDefinition(item) {
    return exports.reflection.isInstance(item, exports.DatasetDefinition);
}
exports.isDatasetDefinition = isDatasetDefinition;
exports.Requeriment = 'Requeriment';
function isRequeriment(item) {
    return exports.reflection.isInstance(item, exports.Requeriment);
}
exports.isRequeriment = isRequeriment;
class SecondAstReflection {
    getAllTypes() {
        return ['Attribute', 'Declaration', 'Instance', 'Model', 'Author', 'DatasetDefinition', 'Requeriment'];
    }
    isInstance(node, type) {
        return (0, langium_1.isAstNode)(node) && this.isSubtype(node.$type, type);
    }
    isSubtype(subtype, supertype) {
        if (subtype === supertype) {
            return true;
        }
        switch (subtype) {
            case exports.Author:
            case exports.DatasetDefinition:
            case exports.Requeriment: {
                return this.isSubtype(exports.Declaration, supertype);
            }
            default: {
                return false;
            }
        }
    }
    getReferenceType(referenceId) {
        switch (referenceId) {
            case 'Requeriment:desName': {
                return exports.Attribute;
            }
            case 'Requeriment:reporter': {
                return exports.Author;
            }
            default: {
                throw new Error(`${referenceId} is not a valid reference id.`);
            }
        }
    }
}
exports.SecondAstReflection = SecondAstReflection;
exports.reflection = new SecondAstReflection();
//# sourceMappingURL=ast.js.map